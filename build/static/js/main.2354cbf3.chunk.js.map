{"version":3,"sources":["components/javaEditor.jsx","components/cppEditor.jsx","components/pythonEditor.jsx","App.js","reportWebVitals.js","index.js"],"names":["Java","useState","code","setCode","input","setInput","output","setOutput","load","setLoad","style","display","fontWeight","mode","theme","placeholder","onChange","value","String","className","fontSize","marginLeft","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","err","e","target","Cpp","Python","App","lang","setLang","margin","textAlign","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2354cbf3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './compiler.css';\r\nimport '../App.css';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-noconflict/mode-java';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\n\r\nconst Java = () => {\r\n\tconst [code, setCode] = useState();\r\n\tconst [input, setInput] = useState();\r\n\tconst [output, setOutput] = useState();\r\n\tconst [load, setLoad] = useState(null);\r\n\r\n\tconst compilecode = () => {\r\n\t\tfetch('/java', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcode: code,\r\n\t\t\t\tinput: input\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\t//console.log(String(data.output));\r\n\t\t\t\tsetOutput(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\t//console.log(err);\r\n\t\t\t\tsetOutput(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}> Type your code here</div>\r\n\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\t\tmode=\"java\"\r\n\t\t\t\t\t\ttheme=\"monokai\"\r\n\t\t\t\t\t\tplaceholder=\"write your code here\"\r\n\t\t\t\t\t\tonChange={value => {\r\n\t\t\t\t\t\t\t//console.log(value);\r\n\t\t\t\t\t\t\tsetCode(String(value));\r\n\t\t\t\t\t\t\t//console.log(code);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"editor\"\r\n\t\t\t\t\t\tfontSize=\"20px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div style={{ display: 'flex', marginLeft: '30px' }}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"build-button\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tcompilecode();\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t\tsetLoad('Loading...');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBuild and Run\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"clearButton\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetLoad(null);\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClear Output\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Input</div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetInput(String(e.target.value));\r\n\t\t\t\t\t\t\t//console.log(input);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Output</div>\r\n\t\t\t\t\t<div className=\"output\" placeholder=\"output\">\r\n\t\t\t\t\t\t{output ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<pre>{String(output.output)}</pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tload\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Java;\r\n","import React, { useState } from 'react';\r\nimport './compiler.css';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-noconflict/mode-c_cpp';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\n\r\nconst Cpp = () => {\r\n\tconst [code, setCode] = useState();\r\n\tconst [input, setInput] = useState();\r\n\tconst [output, setOutput] = useState();\r\n\tconst [load, setLoad] = useState(null);\r\n\r\n\tconst compilecode = () => {\r\n\t\tfetch('/cpp', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcode: code,\r\n\t\t\t\tinput: input\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\t//console.log(String(data.output));\r\n\t\t\t\tsetOutput(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\t//console.log(err);\r\n\t\t\t\tsetOutput(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}> Type your code here</div>\r\n\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\t\tmode=\"c_cpp\"\r\n\t\t\t\t\t\ttheme=\"monokai\"\r\n\t\t\t\t\t\tplaceholder=\"write your code here\"\r\n\t\t\t\t\t\tonChange={value => {\r\n\t\t\t\t\t\t\t//console.log(value);\r\n\t\t\t\t\t\t\tsetCode(String(value));\r\n\t\t\t\t\t\t\t//console.log(code);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"editor\"\r\n\t\t\t\t\t\tfontSize=\"20px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div style={{ display: 'flex', marginLeft: '30px' }}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"build-button\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tcompilecode();\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t\tsetLoad('Loading...');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBuild and Run\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"clearButton\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetLoad(null);\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClear Output\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Input</div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetInput(String(e.target.value));\r\n\t\t\t\t\t\t\t//console.log(input);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Output</div>\r\n\t\t\t\t\t<div className=\"output\" placeholder=\"output\">\r\n\t\t\t\t\t\t{output ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<pre>{String(output.output)}</pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tload\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cpp;\r\n","import React, { useState } from 'react';\r\nimport './compiler.css';\r\nimport '../App.css';\r\n\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'ace-builds/src-noconflict/mode-python';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\n\r\nconst Python = () => {\r\n\tconst [code, setCode] = useState();\r\n\tconst [input, setInput] = useState();\r\n\tconst [output, setOutput] = useState();\r\n\tconst [load, setLoad] = useState(null);\r\n\r\n\tconst compilecode = () => {\r\n\t\tfetch('/python', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tcode: code,\r\n\t\t\t\tinput: input\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\t//console.log(String(data.output));\r\n\t\t\t\tsetOutput(data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\t//console.log(err);\r\n\t\t\t\tsetOutput(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}> Type your code here</div>\r\n\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\t\tmode=\"python\"\r\n\t\t\t\t\t\ttheme=\"monokai\"\r\n\t\t\t\t\t\tplaceholder=\"write your code here\"\r\n\t\t\t\t\t\tonChange={value => {\r\n\t\t\t\t\t\t\t//console.log(value);\r\n\t\t\t\t\t\t\tsetCode(String(value));\r\n\t\t\t\t\t\t\t//console.log(code);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"editor\"\r\n\t\t\t\t\t\tfontSize=\"20px\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div style={{ display: 'flex', marginLeft: '30px' }}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"build-button\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tcompilecode();\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t\tsetLoad('Loading...');\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBuild and Run\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"clearButton\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetLoad(null);\r\n\t\t\t\t\t\t\t\tsetOutput(null);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tClear Output\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Input</div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\tsetInput(String(e.target.value));\r\n\t\t\t\t\t\t\t//console.log(input);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<div style={{ fontWeight: '800' }}>Output</div>\r\n\t\t\t\t\t<div className=\"output\" placeholder=\"output\">\r\n\t\t\t\t\t\t{output ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<pre>{String(output.output)}</pre>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tload\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Python;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Editor from './components/javaEditor';\nimport Editor1 from './components/cppEditor';\nimport Editor2 from './components/pythonEditor';\n\nfunction App() {\n\tconst [lang, setLang] = useState('C++');\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div style={{ display: 'flex', margin: '30px', textAlign: 'center', justifyContent: 'center' }}>\n\t\t\t\t<div style={{ fontWeight: '800', fontSize: '30px' }}>Online {lang} IDE</div>\n\t\t\t\t<div className=\"dropdown\">\n\t\t\t\t\t<div className=\"container\">Language: {lang}</div>\n\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"lang\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetLang('C++');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tC++\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"lang\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetLang('Java');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tJava\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"lang\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetLang('Python');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPython\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t<div>{lang == 'C++' ? <Editor1 /> : lang == 'Java' ? <Editor /> : <Editor2 />}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}